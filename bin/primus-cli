#!/bin/bash
###############################################################################
# Copyright (c) 2025, Advanced Micro Devices, Inc. All rights reserved.
#
# See LICENSE for license information.
###############################################################################

set -euo pipefail

print_help() {
cat << EOF
Primus Unified Launcher CLI

Usage:
    primus-cli <mode> [mode-args] [-- primus-args]

Supported modes:
    slurm      Launch distributed training via Slurm cluster (supports sbatch/srun)
    container  Launch training inside a managed container (Docker/Podman)
    direct     Directly launch training in the current environment (host or container)

Mode-specific help:
    primus-cli slurm --help         Show slurm mode usage
    primus-cli container --help     Show container mode usage
    primus-cli direct --help        Show direct mode usage

Examples:
    # Launch via Slurm with srun (default), 4 nodes
    primus-cli slurm srun -N 4 -- benchmark gemm -M 4096 -N 4096 -K 4096

    # Launch via Slurm using sbatch, partition named AIG_Model
    primus-cli slurm sbatch -N 8 -p AIG_Model -- train pretrain --config exp.yaml

    # Run in managed container (single node or for debugging)
    primus-cli container -- benchmark gemm -M 4096 -N 4096 -K 4096

    # Run directly on host or inside an existing container
    primus-cli direct -- train pretrain --config exp.yaml

Advanced:
    # Use --container or --host flags with slurm to control entry script (optional)
    primus-cli slurm srun --container -N 2 -- benchmark gemm ...
    primus-cli slurm sbatch --host -N 1 -- train pretrain ...

Notes:
- [--] separates mode-specific flags from Primus CLI arguments.
       Everything after -- is passed to the Primus Python CLI (e.g., benchmark, train).
- For detailed Primus training and benchmarking options, run: primus-cli direct -- --help

EOF
}

# Show help if called with -h, --help, or no arguments
if [[ $# -eq 0 || "$1" == "-h" || "$1" == "--help" ]]; then
    print_help
    exit 0
fi

# # Check argument count, print usage if not enough arguments
[[ $# -ge 1 ]] || { echo "Usage: primus-cli {launch|slurm|direct} ..."; exit 2; }
mode="$1"; shift

SCRIPT_DIR="$(dirname "$0")"

case "$mode" in
    slurm)
        # Slurm mode: Dispatch to primus-cli-slurm.sh for distributed job submission via Slurm scheduler.
        SLURM_SCRIPT="$SCRIPT_DIR/primus-cli-slurm.sh"
        if [[ ! -f "$SLURM_SCRIPT" ]]; then
            echo "[primus-cli][ERROR] Slurm script not found: $SLURM_SCRIPT"
            exit 2
        fi
        echo "[primus-cli] Executing: bash $SLURM_SCRIPT $*"
        exec bash "$SLURM_SCRIPT" "$@"
        ;;

    container)
        # Container mode: dispatch to primus-cli-container.sh for containerized execution
        CONTAINER_SCRIPT="$SCRIPT_DIR/primus-cli-container.sh"
        if [[ ! -f "$CONTAINER_SCRIPT" ]]; then
            echo "[primus-cli][ERROR] Container script not found: $CONTAINER_SCRIPT"
            exit 2
        fi

        echo "[primus-cli] Executing: bash $CONTAINER_SCRIPT $*"
        exec bash "$CONTAINER_SCRIPT" "$@"
        ;;

    direct)
        # Direct (host) mode: run workflow directly on the host, no container
        DIRECT_SCRIPT="$SCRIPT_DIR/primus-cli-entrypoint.sh"
        if [[ ! -f "$DIRECT_SCRIPT" ]]; then
            echo "[primus-cli][ERROR] Entrypoint script not found: $DIRECT_SCRIPT"
            exit 2
        fi
        echo "[primus-cli] Executing: bash $DIRECT_SCRIPT $*"
        exec bash "$DIRECT_SCRIPT" "$@"
        ;;

    *)
        echo "[primus-cli][ERROR] Unknown mode: $mode"
        print_help
        exit 2
        ;;
esac
